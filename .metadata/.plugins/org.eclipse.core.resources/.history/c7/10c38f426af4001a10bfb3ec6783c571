package application;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Scanner;
import java.util.stream.Collectors;

import entities.Employee;

public class Program {

	public static void main(String[] args) {
		Locale.setDefault(Locale.US);
		Scanner sc = new Scanner(System.in);

		List<Employee> list = new ArrayList<>();

		System.out.print("How many employees will be registered? ");
		int N = sc.nextInt();

		for (int i = 0; i < N; i++) {
			System.out.println();
			System.out.println("Emplyoee: #" + (i + 1) + ": ");
			System.out.print("Id: ");
			Integer id = sc.nextInt();
			System.out.print("Name: ");
			sc.nextLine();
			String name = sc.nextLine();
			System.out.print("Salary: ");
			Double salary = sc.nextDouble();
			Employee emp = new Employee(id, name, salary);
			list.add(emp);
		}

		System.out.print("Enter the employee id that will have salary increase : ");
		int idEmployee = sc.nextInt();
		Integer pos = position(list, idEmployee);
		if (pos == null) {
			System.out.println("This is does not exist!");
		}
		
		Employee emp = list.stream().filter(x -> x.getId() == idEmployee).findFirst().orElse(null);

		System.out.println();
		System.out.print("Enter the percentage: ");
		double percentage = sc.nextDouble();
		employee.increaseSalary(percentage);

		System.out.println();
		System.out.println("List of employees: ");
		for (Employee x : list) {
			System.out.println(x);
		}
		System.out.println();
		System.out.println("--------------------");
		System.out.println(list.size());

		sc.close();
	}

	// list é outro escopo não tem haver com o método main.
	// método para dizer qual a posição da minha lista.
	// se utilizar public int precisa return -1;
	public static Integer position(List<Employee> list, int id) {
		for (int i = 0; i < list.size(); i++) {
			if (list.get(i).getId() == id) {
				return i;
			}
		}
		return null;
	}
}
